# Linear age effect
library(RMINC)
library(readxl)
library(reshape2)
wd = getwd() # IMPORTANT: working directory has to be the same directory that the R file is in
dir.create("./results/", showWarnings = FALSE) # create results folder
# Specify the paths to excel files and vertex files
path_to_csv = "../../master_anon.csv"
path_to_outputs = "../../vertex_files_20mm_anon/"
# Import datasets
all_dataset = read.csv(path_to_csv)
# Remove IDs that don't pass CIVET QC, T1w QC or T2w QC
all_subset = subset(all_dataset, (all_dataset$qc_civet != 0) & (all_dataset$qc_t1w <= 2) & (all_dataset$qc_t2w <= 2), select=c(ID, age, sex))
# Substract age by the minimum age
all_subset$age = all_subset$age - min(all_subset$age)
# Encode vertex files
markers_left = list()
markers_right = list()
# Take inputs that are residualized for curvature
markers_left[[1]] = paste0(path_to_outputs,"BSC_res_curv/",all_subset$ID,"_BSC_res_curv_left.txt")
markers_right[[1]] = paste0(path_to_outputs,"BSC_res_curv/", all_subset$ID, "_BSC_res_curv_right.txt")
markers_left[[2]] = paste0(path_to_outputs,"GWC_res_curv/",all_subset$ID,"_GWC_res_curv_left.txt")
markers_right[[2]] = paste0(path_to_outputs,"GWC_res_curv/", all_subset$ID, "_GWC_res_curv_right.txt")
markers_left[[3]] = paste0(path_to_outputs,"CT_res_curv/",all_subset$ID,"_CT_res_curv_left.txt")
markers_right[[3]] = paste0(path_to_outputs,"CT_res_curv/", all_subset$ID, "_CT_res_curv_right.txt")
markers_left[[4]] = paste0(path_to_outputs,"t1t2_ratio_25_GM_res_curv/",all_subset$ID,"_t1t2_ratio_25_res_curv_left.txt")
markers_right[[4]] = paste0(path_to_outputs,"t1t2_ratio_25_GM_res_curv/", all_subset$ID, "_t1t2_ratio_25_res_curv_right.txt")
markers_left[[5]] = paste0(path_to_outputs,"t1t2_ratio_25_WM_res_curv/", all_subset$ID, "_t1t2_ratio_25_WM_res_curv_left.txt")
markers_right[[5]] = paste0(path_to_outputs,"t1t2_ratio_25_WM_res_curv/", all_subset$ID, "_t1t2_ratio_25_WM_res_curv_right.txt")
markers_left[[6]] = paste0(path_to_outputs,"t1t2_ratio_50_GM_res_curv/", all_subset$ID, "_t1t2_ratio_50_res_curv_left.txt")
markers_right[[6]] = paste0(path_to_outputs,"t1t2_ratio_50_GM_res_curv/", all_subset$ID, "_t1t2_ratio_50_res_curv_right.txt")
# Marker list (in the right order)
names = c("BSC", "GWC", "CT", "t1t2_ratio_25_GM", "t1t2_ratio_25_WM", "t1t2_ratio_50_GM")
lm_markers_left = list()
lm_markers_right = list()
# Initialize beta thresholds
row_names = c("-1 SD", "+1 SD", "-1.5 SD", "+1.5 SD", "-2 SD", "+2 SD")
beta_thresholds = as.data.frame(matrix(0, ncol = length(names), nrow = length(row_names)))
row.names(beta_thresholds) = row_names
colnames(beta_thresholds) = names
thresholds = c(-1, 1, -1.5, 1.5, -2, 2)
# Initialize tvalue thresholds
tvalue_thresholds = matrix(nrow = 20, ncol = 0)
# For each marker...
for (i in 1:length(names)){
cat(paste0("\n--------------------------\n", names[i], "\n--------------------------\n"))
cat(head(markers_left[[i]], 1))
# Fit linear models to each vertex
cat("\nFit linear models to each vertex\n")
lm_markers_left[[i]] = vertexLm(markers_left[[i]] ~ age + sex, all_subset)
lm_markers_right[[i]] = vertexLm(markers_right[[i]] ~ age + sex, all_subset)
# FDR correction
cat("\nFDR correction")
tvalue_thresholds = cbind(tvalue_thresholds, rep(NA, 20), paste0(names[i], " left"), melt(print(vertexFDR(lm_markers_left[[i]]))))
tvalue_thresholds = cbind(tvalue_thresholds, rep(NA, 20), paste0(names[i], " right"), melt(print(vertexFDR(lm_markers_right[[i]]))))
write.csv(tvalue_thresholds, './results/tvalue_thresholds.csv', row.names = TRUE)
lm_markers_left[[i]] = as.data.frame(cbind(lm_markers_left[[i]], vertexFDR(lm_markers_left[[i]])))
lm_markers_right[[i]] = as.data.frame(cbind(lm_markers_right[[i]], vertexFDR(lm_markers_right[[i]])))
# Add column of only significant betas (not-significant = 0)
cat("\nColumn for only significant betas (not-significant = 0)")
lm_markers_left[[i]]$sig_beta_age = 0
lm_markers_right[[i]]$sig_beta_age = 0
for (vertex in 1:40962){
if(lm_markers_left[[i]]$`qvalue-tvalue-age`[vertex] < 0.05) {lm_markers_left[[i]]$sig_beta_age[vertex] = lm_markers_left[[i]]$`beta-age`[vertex]}
if(lm_markers_right[[i]]$`qvalue-tvalue-age`[vertex] < 0.05) {lm_markers_right[[i]]$sig_beta_age[vertex] = lm_markers_right[[i]]$`beta-age`[vertex]}
}
# Write results to csv
cat("\nWrite to csv")
write.table(lm_markers_left[[i]], paste0('./results/lm_', names[i],'_left_FDR.csv'), sep=",", col.names = TRUE, row.names = FALSE)
write.table(lm_markers_right[[i]], paste0('./results/lm_', names[i],'_right_FDR.csv'), sep=",", col.names = TRUE, row.names = FALSE)
cat("\nBeta thresholds csv for visualization")
for (tresh in 1:length(thresholds)){
beta_thresholds[tresh,i] = mean(rbind(lm_markers_left[[i]]$`beta-age`, lm_markers_right[[i]]$`beta-age`)) + thresholds[tresh] * sd(rbind(lm_markers_left[[i]]$`beta-age`, lm_markers_right[[i]]$`beta-age`))
}
write.csv(beta_thresholds, './results/beta_thresholds.csv', row.names = TRUE)
}
